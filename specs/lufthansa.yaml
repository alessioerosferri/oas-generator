for (path in paths) {
          for (var method in paths[path]) {

            if (paths[path][method].operationId != undefined) {
              opId = generateName(paths[path][method].operationId, undefined);
            } else {
              opId = generateName(path, "function") + method.toUpperCase();
              logger.debug("Oas-doc does not have opearationId property for " + method.toUpperCase() + " - " + path + " -> operationId name autogenerated: " + opId);
            }

            if (paths[path][method]['x-router-controller'] != undefined) {
              controllerName = paths[path][method]['x-router-controller'];
            } else if (paths[path][method]['x-swagger-router-controller'] != undefined) {
              controllerName = paths[path][method]['x-swagger-router-controller'];
            } else {
              controllerName = generateName(path, "controller");
              logger.debug("Oas-doc does not have routing property for " + method.toUpperCase() + " - " + path + " -> controller name autogenerated: " + controllerName);
            }
            controllerName = generateName(controllerName, undefined);

            logger.debug("Write: " + opId);

            if (!controller_files.includes(controllerName)) {
              controller_files.push(controllerName);
              controller_files.push(controllerName + "Service");
              var controllerVariable = generateName(controllerName, "variable"); //sanitize variable name for controller's require
              var header = "'use strict' \n\nvar " + controllerVariable + " = require('./" + controllerName + "Service');\n\n";
              fs.appendFileSync(process.cwd() + '/controllers/' + controllerName + ".js", header);
              fs.appendFileSync(process.cwd() + '/controllers/' + controllerName + "Service.js", "'use strict'\n\n");
            }
            var function_string = "module.exports." + opId + " = function " + opId + " (req, res, next) {\n" + controllerVariable + "." + opId + "(req.swagger.params, res, next);\n};\n\n";
            var function_string_service = "module.exports." + opId + " = function " + opId + " (req, res, next) {\nres.send({message: 'This is the raw controller for " + opId + "' });\n};\n\n";
            fs.appendFileSync(process.cwd() + '/controllers/' + controllerName + ".js", function_string);
            fs.appendFileSync(process.cwd() + '/controllers/' + controllerName + "Service.js", function_string_service);
          }
        }